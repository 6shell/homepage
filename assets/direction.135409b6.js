var T,E;(E=T||(T={}))[E.TOP_START=1]="TOP_START",E[E.TOP_CENTER=2]="TOP_CENTER",E[E.TOP_END=3]="TOP_END",E[E.RIGHT_START=4]="RIGHT_START",E[E.RIGHT_CENTER=5]="RIGHT_CENTER",E[E.RIGHT_END=6]="RIGHT_END",E[E.BOTTOM_END=7]="BOTTOM_END",E[E.BOTTOM_CENTER=8]="BOTTOM_CENTER",E[E.BOTTOM_START=9]="BOTTOM_START",E[E.LEFT_END=10]="LEFT_END",E[E.LEFT_CENTER=11]="LEFT_CENTER",E[E.LEFT_START=12]="LEFT_START";const _=[];for(const N in T)isNaN(N)&&_.push({label:N,value:T[N]});function R(T,E,_=8){const{width:R,height:N,top:O,left:t}=T.getBoundingClientRect(),{width:e,height:n,offset:i=10}=E;return{1:[t,O-n-i],2:[t+R/2-e/2,O-n-i],3:[t+R-e,O-n-i],4:[t+R+i,O],5:[t+R+i,O+N/2-n/2],6:[t+R+i,O+N-n],7:[t+R-e,O+N+i],8:[t+R/2-e/2,O+N+i],9:[t,O+N+i],10:[t-e-i,O+N-n],11:[t-e-i,O+N/2-n/2],12:[t-e-i,O]}[_]||[0,0]}export{_ as d,R as g};
